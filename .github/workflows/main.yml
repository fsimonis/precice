name: CI

on: [push, pull_request]

jobs:
  build:
    name: ${{ format('{0}++ {1} {2}', matrix.CXX, matrix.MPI, matrix.PETSC) }}
    runs-on: ubuntu-latest
    container: precice/ci-base:latest
    strategy:
      fail-fast: false
      matrix:
        MPI: [MPI, NoMPI]
        PETSC: [PETSC, NoPETSC]
        CXX: [g++, clang++]
        exclude:
          - MPI: NoMPI
            PETSC: PETSC
    env:
      CCACHE_DIR: "$GITHUB_WORKSPACE/ccache"
    steps:
      - name: Restore ccache
        uses: actions/cache@v1
        with:
          path: ccache
          key: precice-${{ runner.OS }}-ccache-${{ matrix.CXX }}-${{ matrix.MPI }}-${{ matrix.PETSC }}
      - uses: actions/checkout@v1
      - name: Generate build directory
        run: mkdir -p build
      - name: Configure
        working-directory: build
        env:
          CXX: ${{ matrix.CXX }}
          CXX_FLAGS: "-Wall -Wextra -Wpedantic"
        run: cmake -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Debug -DMPI=${{ matrix.MPI == 'MPI' }} -DPETSC=${{ matrix.PETSC == 'PETSC' }} -DCMAKE_CXX_COMPILER_LAUNCHER=ccache ..
      - name: Compile
        working-directory: build
        run: make -j $(nproc)
      - name: CCache Statistics
        run: ccache -s
      - name: Adjust user rights
        run: chown -R $PRECICE_USER build
      - name: Tests - mandatory
        env:
          CTEST_OUTPUT_ON_FAILURE: 1
        working-directory: build
        run: su -c "ctest -LE canfail" $PRECICE_USER
      - name: Tests - canfail
        env:
          CTEST_OUTPUT_ON_FAILURE: 1
        working-directory: build
        continue-on-error: true
        run: su -c "ctest -L canfail" $PRECICE_USER
      - name: Build packages
        working-directory: build
        run: cpack
      - name: Prepare artifacts
        run: |
          mkdir -p artifacts/deb
          cp build/libprecice*.deb* artifacts/deb
          mkdir -p artifacts/tar
          cp build/libprecice*.tar* artifacts/tar
          mkdir -p artifacts/logs
          cp build/CMakeCache.txt build/CMakeFiles/CMakeOutput.log build/CMakeFiles/CMakeError.log artifacts/logs
      - uses: actions/upload-artifact@master
        with:
          name: Debian package
          path: artifacts/deb
      - uses: actions/upload-artifact@master
        with:
          name: Tar package
          path: artifacts/tar
      - uses: actions/upload-artifact@master
        with:
          name: CMake logs
          path: artifacts/logs
